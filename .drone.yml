pipeline:
  check-diffs:
    image: bravissimolabs/alpine-git
    commands:
      - cd /drone/src/github.com/vespakoen/ontheweb
      - git diff --name-only ${DRONE_PREV_COMMIT_SHA}..@
      - git diff --exit-code --name-only ${DRONE_PREV_COMMIT_SHA}..@ -- dwaler/ || echo "true" > dwaler_changed
      - git diff --exit-code --name-only ${DRONE_PREV_COMMIT_SHA}..@ -- koenschmeets/ || echo "true" > koenschmeets_changed
      - git diff --exit-code --name-only ${DRONE_PREV_COMMIT_SHA}..@ -- lektor/ || echo "true" > lektor_changed
      - git diff --exit-code --name-only ${DRONE_PREV_COMMIT_SHA}..@ -- https-portal/ || echo "true" > https-portal_changed
      - git diff --exit-code --name-only ${DRONE_PREV_COMMIT_SHA}..@ -- sftp-cache/ || echo "true" > sftp-cache_changed
  osx:
    image: iadknet/ssh-client-light
    volumes:
      - /root/.vagrant.d/insecure_private_key:/vagrant_key
    commands:
      - ssh vagrant@192.168.33.10 -p 22 -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -i /vagrant_key
  load-cache:
    image: plugins/sftp-cache:latest
    mount:
      - dwaler/node_modules
    restore: true
    when:
      event: [ pull_request, push ]
# DWALER
  test-dwaler:
    image: node:6
    environment:
      NPM_CONFIG_LOGLEVEL: "warn"
      NPM_CONFIG_COLOR: "always"
    commands:
      - cat dwaler_changed || exit 0
      - cd dwaler
      - npm install --production
      - npm test
  publish-dwaler:
    image: docker
    commands:
      - cat dwaler_changed || exit 0
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - docker build -t vespakoen/dwaler -f dwaler/Dockerfile dwaler
      - docker push vespakoen/dwaler
    environment:
      - DOCKER_USERNAME=$$DOCKER_USERNAME
      - DOCKER_PASSWORD=$$DOCKER_PASSWORD
      - DOCKER_EMAIL=$$DOCKER_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# LEKTOR
  publish-lektor:
    image: docker
    commands:
      - cat lektor_changed || exit 0
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - docker build -t vespakoen/lektor -f lektor/Dockerfile lektor
      - docker push vespakoen/lektor
    environment:
      - DOCKER_USERNAME=$$DOCKER_USERNAME
      - DOCKER_PASSWORD=$$DOCKER_PASSWORD
      - DOCKER_EMAIL=$$DOCKER_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# KOENSCHMEETS
  build-koenschmeets:
    image: vespakoen/lektor:latest
    commands:
      - cat koenschmeets_changed || exit 0
      - cd /drone/src/github.com/vespakoen/ontheweb/koenschmeets
      - lektor build -O public
  publish-koenschmeets:
    image: docker
    commands:
      - cat koenschmeets_changed || exit 0
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - docker build -t vespakoen/koenschmeets -f koenschmeets/Dockerfile koenschmeets
      - docker push vespakoen/koenschmeets
    environment:
      - DOCKER_USERNAME=$$DOCKER_USERNAME
      - DOCKER_PASSWORD=$$DOCKER_PASSWORD
      - DOCKER_EMAIL=$$DOCKER_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# HTTPS-PORTAL
  publish-https-portal:
    image: docker
    commands:
      - cat https-portal_changed || exit 0
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - docker build -t vespakoen/https-portal -f https-portal/Dockerfile https-portal
      - docker push vespakoen/https-portal
    environment:
      - DOCKER_USERNAME=$$DOCKER_USERNAME
      - DOCKER_PASSWORD=$$DOCKER_PASSWORD
      - DOCKER_EMAIL=$$DOCKER_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  publish-sftp-cache:
    image: docker
    commands:
      - cat sftp-cache_changed || exit 0
      - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      - docker build -t vespakoen/sftp-cache -f sftp-cache/Dockerfile sftp-cache
      - docker push vespakoen/sftp-cache
    environment:
      - DOCKER_USERNAME=$$DOCKER_USERNAME
      - DOCKER_PASSWORD=$$DOCKER_PASSWORD
      - DOCKER_EMAIL=$$DOCKER_EMAIL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# DEPLOY (now handled by docker cloud, left here as reference for others)
  # update-server:
  #   image: dduportal/docker-compose
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   commands:
  #     - cd /drone/src/github.com/vespakoen/ontheweb
  #     - bash -c "(cat dwaler_changed && docker-compose pull dwalerwww) || true"
  #     - bash -c "(cat koenschmeets_changed && docker-compose pull koenschmeetswww) || true"
  #     - bash -c "(cat dwaler_changed && docker-compose stop dwalerwww) || true"
  #     - bash -c "(cat koenschmeets_changed && docker-compose stop koenschmeetswww) || true"
  #     - bash -c "(cat dwaler_changed && docker-compose rm -f dwalerwww) || true"
  #     - bash -c "(cat koenschmeets_changed && docker-compose rm -f koenschmeetswww) || true"
  #     - bash -c "(cat dwaler_changed && docker-compose up -d dwalerwww) || true"
  #     - bash -c "(cat koenschmeets_changed && docker-compose up -d koenschmeetswww) || true"
  save-cache:
    image: plugins/sftp-cache:latest
    mount:
      - dwaler/node_modules
    rebuild: true
    when:
      event: [ push ]
  notify:
    image: plugins/slack:latest
    channel: general
    when:
      status:  [ failure, success ]
