# SSL
https-portal:
  image: steveltn/https-portal
  restart: always
  ports:
    - 80:80
    - 443:443
  links:
    - koenschmeetswww
    - koenschmeetsci
    - dwalerwww
    - hummingwww
    - tileswww
    - brouterwww
    - overpasswww
  volumes:
    - /data/ssl_certs:/var/lib/https-portal
  environment:
    DOMAINS: >
      koenschmeets.nl -> http://koenschmeetswww,
      www.koenschmeets.nl -> http://koenschmeetswww,
      ci.koenschmeets.nl -> http://koenschmeetsci:8000,
      tiles.koenschmeets.nl -> http://tileswww:8080,
      dwaler.com -> http://dwalerwww,
      www.dwaler.com -> http://dwalerwww,
      tiles.dwaler.com -> http://tileswww:8080,
      overpass.dwaler.com -> http://overpasswww,
      brouter.dwaler.com -> http://brouterwww,
      humming.guru -> http://hummingwww,
      www.humming.guru -> http://hummingwww,
      tiles.humming.guru -> http://tileswww:8080
    STAGE: production
    WEBSOCKET: "true"
    RESOLVER: 127.0.0.11 valid=60s

# KOENSCHMEETS
koenschmeetswww:
  image: vespakoen/koenschmeets:latest
  restart: always

# CI
koenschmeetsci:
  image: drone/drone:0.5
  restart: always
  privileged: true
  environment:
    DRONE_GITHUB: "true"
    DRONE_GITHUB_CLIENT: $DRONE_GITHUB_CLIENT
    DRONE_GITHUB_SECRET: $DRONE_GITHUB_SECRET
    DRONE_AGENT_SECRET: $DRONE_AGENT_SECRET
    DRONE_ADMIN: vespakoen
    I_UNDERSTAND_I_AM_USING_AN_UNSTABLE_VERSION: "true"
    I_AGREE_TO_FIX_BUGS_AND_NOT_FILE_BUGS: "true"
    DRONE_DEBUG: "true"
  volumes:
   - "/data/drone:/var/lib/drone"
   - "/var/run/docker.sock:/var/run/docker.sock"
  ports:
    - 8000:8000
koenschmeetsci-agent:
  image: drone/drone:0.5
  restart: always
  environment:
    DRONE_SERVER: http://koenschmeetsci:8000
    DRONE_SECRET: $DRONE_AGENT_SECRET
    DRONE_TOKEN: $DRONE_USER_TOKEN
    DRONE_PLUGIN_NETRC: "true"
    I_UNDERSTAND_I_AM_USING_AN_UNSTABLE_VERSION: "true"
    I_AGREE_TO_FIX_BUGS_AND_NOT_FILE_BUGS: "true"
    DRONE_DEBUG: "true"
    DRONE_TIMEOUT: "50h"
    # DRONE_PLUGIN_PULL: "false"
    DRONE_PLUGIN_PRIVILEGED: "plugins/docker,plugins/docker:*"
  links:
    - koenschmeetsci
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - "/root/.vagrant.d/insecure_private_key:/vagrant_key"
  command: agent
koenschmeetsci-cache:
  image: vespakoen/sftp-cache
  ports:
    - "2222:22"
  volumes:
    - /data/cache:/home/cache/share
  command: ${SFTP_CACHE_USERNAME}:${SFTP_CACHE_PASSWORD}:1001

# DWALER
dwalerwww:
  image: vespakoen/dwaler:latest
  restart: always
  environment:
    DWALER_PORT: 80

# HUMMINGGURU
hummingwww:
  image: tutum/hello-world
  restart: always

# VECTOR TILES
tileswww:
  image: vespakoen/tiles:latest
  restart: always
  environment:
    TILES_PATH: /data/planet.mbtiles
  volumes:
    - /data/tiles:/data

# BROUTER PROXY
brouterwww:
  image: vespakoen/brouter-proxy:latest
  restart: always
  environment:
    BROUTER_PROXY_PORT: 80

# OVERPASS-API
overpasswww:
  image: vespakoen/overpass-api:latest
  restart: always
  environment:
    EXEC_DIR: /srv/osm3s
    DB_DIR: /srv/osm3s/db

# OSM2VECTORTILES
pgdata:
  image: "tianon/true"
  volumes:
    - /var/lib/postgresql/data
# rabbitdata:
#   image: "tianon/true"
#   volumes:
#     - /var/lib/rabbitmq
cache:
  image: "tianon/true"
  volumes:
    - /data/osm2vectortiles/cache
postgis:
  image: "osm2vectortiles/postgis"
  volumes_from:
    - pgdata
  ports:
    - "5432:5432"
import-osm:
  image: "osm2vectortiles/import-osm"
  command: ./import-pbf.sh
  volumes:
    - /data/osm2vectortiles/import:/data/import
  volumes_from:
    - cache
  links:
    - postgis:db
  environment:
     DIFFS: 'true'
# import-osm-diff:
#   image: "osm2vectortiles/import-osm"
#   command: ./import-diff.sh
#   volumes:
#    - ./import:/data/import
#    - ./src/import-osm:/usr/src/app
#   volumes_from:
#    - cache
#   links:
#    - postgis:db
# update-osm-diff:
#   image: "osm2vectortiles/import-osm"
#   command: ./import-osmupdate.sh
#   volumes:
#    - ./import:/data/import
#   environment:
#      OSM_UPDATE_BASEURL: "http://download.geofabrik.de/europe/liechtenstein-updates/"
# merge-osm-diff:
#   image: "osm2vectortiles/import-osm"
#   command: ./import-mergediffs.sh
#   volumes:
#    - ./import:/data/import
import-external:
  image: "osm2vectortiles/import-external"
  links:
    - postgis:db
# import-labels:
#   image: "osm2vectortiles/import-external"
#   command: ./import-labels.sh
#   links:
#     - postgis:db
# import-natural-earth:
#   image: "osm2vectortiles/import-external"
#   command: ./import-natural-earth.sh
#   links:
#     - postgis:db
# import-water:
#   image: "osm2vectortiles/import-external"
#   command: ./import-water.sh
#   links:
#     - postgis:db
# changed-tiles:
#   image: "osm2vectortiles/changed-tiles"
#   volumes:
#     - ./export:/data/export
#   links:
#     - postgis:db
# generate-jobs:
#   image: "osm2vectortiles/generate-jobs"
#   volumes:
#     - ./export:/data/export
#   links:
#     - rabbitmq:rabbitmq
# generate-diff-jobs:
#   image: "osm2vectortiles/generate-jobs"
#   command: ./generate_list_jobs.sh
#   volumes:
#     - ./export:/data/export
#   links:
#     - rabbitmq:rabbitmq
# merge-jobs:
#   image: "osm2vectortiles/merge-jobs"
#   volumes:
#     - ./export:/data/export
#   links:
#     - rabbitmq:rabbitmq
# export-worker:
#   image: "osm2vectortiles/export"
#   command: ./export-worker.sh
#   volumes:
#     - ./osm2vectortiles.tm2source:/data/tm2source
#   links:
#     - postgis:db
#     - rabbitmq:rabbitmq
#   environment:
#     AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
#     AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
#     AWS_S3_HOST: "${AWS_S3_HOST}"
#     BUCKET_NAME: "testing"
#     RENDER_TIMEOUT: "300"
#     TILE_TIMEOUT: "1800000"
export:
  image: "osm2vectortiles/export"
  command: ./export-local.sh
  volumes:
    - /data/osm2vectortiles/export:/data/export
    - ./osm2vectortiles.tm2source/:/tmp/project
  links:
   - postgis:db
  environment:
    # Around Germany
    BBOX: "5.2294921875,46.7699684336,15.6005859375,55.3041377374"
    MIN_ZOOM: "0"
    MAX_ZOOM: "14"
# export-list:
#   image: "osm2vectortiles/export"
#   command: ./export-list.sh
#   volumes:
#     - ./export:/data/export
#     - ./osm2vectortiles.tm2source:/data/tm2source
#   links:
#     - postgis:db
import-sql:
  image: "vespakoen/osm2vectortiles-import-sql:simplify"
  links:
    - postgis:db
  environment:
    SQL_CREATE_INDIZES: 'false'
# mapbox-studio:
#   image: "osm2vectortiles/mapbox-studio"
#   volumes:
#     - /data/osm2vectortiles/osm2vectortiles.tm2source:/projects/osm2vectortiles.tm2source
#   links:
#     - postgis:db
#   ports:
#     - "3000:3000"
# rabbitmq:
#   image: "osm2vectortiles/rabbitmq:management"
#   ports:
#     - "15672"
#     - "5672"
#   volumes_from:
#     - rabbitdata
#   environment:
#     RABBITMQ_DEFAULT_USER: "osm"
#     RABBITMQ_DEFAULT_PASS: "osm"
#     RABBITMQ_HEARTBEAT: "600"
# create-extracts:
#   image: "osm2vectortiles/create-extracts"
#   volumes:
#     - ./export:/data/export
#   environment:
#     S3_ACCESS_KEY: "${AWS_ACCESS_KEY_ID}"
#     S3_SECRET_KEY: "${AWS_SECRET_ACCESS_KEY}"
# compare-visual:
#   image: "osm2vectortiles/compare-visual"
#   ports:
#     - "3030:3030"
#   volumes:
#     - ./osm2vectortiles.tm2source:/data/tm2source
#   links:
#     - postgis:db
# mapping-qa-report:
#   image: "osm2vectortiles/mapping-qa-report"
#   links:
#     - postgis:db
#   volumes:
#     - ./export:/data