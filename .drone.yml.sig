eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2hlY2stZGlmZnM6CiAgICBpbWFnZTogYnJhdmlzc2ltb2xhYnMvYWxwaW5lLWdpdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9vbnRoZXdlYgogICAgICAtIGdpdCBkaWZmIC0tbmFtZS1vbmx5IEB-Li5ACiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0gZHdhbGVyLyB8fCBlY2hvICJ0cnVlIiA-IGR3YWxlcl9jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0ga29lbnNjaG1lZXRzLyB8fCBlY2hvICJ0cnVlIiA-IGtvZW5zY2htZWV0c19jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0gbGVrdG9yLyB8fCBlY2hvICJ0cnVlIiA-IGxla3Rvcl9jaGFuZ2VkCiAgbG9hZC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBkd2FsZXIvbm9kZV9tb2R1bGVzCiAgICByZXN0b3JlOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QsIHB1c2ggXQogIHRlc3QtZHdhbGVyOgogICAgaW1hZ2U6IG5vZGU6NgogICAgY29tbWFuZHM6CiAgICAgIC0gY2F0IGR3YWxlcl9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGNkIGR3YWxlcgogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICBwdWJsaXNoLWR3YWxlcjoKICAgIGltYWdlOiBkb2NrZXIKICAgIGNvbW1hbmRzOgogICAgICAtIGNhdCBkd2FsZXJfY2hhbmdlZCB8fCBleGl0IDAKICAgICAgLSBkb2NrZXIgcHMKICAgICAgLSBkb2NrZXIgbG9naW4gLXUgIiRET0NLRVJfVVNFUk5BTUUiIC1wICIkRE9DS0VSX1BBU1NXT1JEIgogICAgICAtIGRvY2tlciBidWlsZCAtdCB2ZXNwYWtvZW4vZHdhbGVyIC1mIGR3YWxlci9Eb2NrZXJmaWxlIGR3YWxlcgogICAgICAtIGRvY2tlciBwdXNoIHZlc3Bha29lbi9kd2FsZXIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9VU0VSTkFNRT0kJERPQ0tFUl9VU0VSTkFNRQogICAgICAtIERPQ0tFUl9QQVNTV09SRD0kJERPQ0tFUl9QQVNTV09SRAogICAgICAtIERPQ0tFUl9FTUFJTD0kJERPQ0tFUl9FTUFJTAogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogIHB1Ymxpc2gtbGVrdG9yOgogICAgaW1hZ2U6IGRvY2tlcgogICAgY29tbWFuZHM6CiAgICAgIC0gY2F0IGxla3Rvcl9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGRvY2tlciBwcwogICAgICAtIGRvY2tlciBsb2dpbiAtdSAiJERPQ0tFUl9VU0VSTkFNRSIgLXAgIiRET0NLRVJfUEFTU1dPUkQiCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHZlc3Bha29lbi9sZWt0b3IgLWYgbGVrdG9yL0RvY2tlcmZpbGUgbGVrdG9yCiAgICAgIC0gZG9ja2VyIHB1c2ggdmVzcGFrb2VuL2xla3RvcgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX1VTRVJOQU1FPSQkRE9DS0VSX1VTRVJOQU1FCiAgICAgIC0gRE9DS0VSX1BBU1NXT1JEPSQkRE9DS0VSX1BBU1NXT1JECiAgICAgIC0gRE9DS0VSX0VNQUlMPSQkRE9DS0VSX0VNQUlMCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgYnVpbGQta29lbnNjaG1lZXRzOgogICAgaW1hZ2U6IHZlc3Bha29lbi9sZWt0b3I6bGF0ZXN0CiAgICBjb21tYW5kczoKICAgICAgLSBjYXQga29lbnNjaG1lZXRzX2NoYW5nZWQgfHwgZXhpdCAwCiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9vbnRoZXdlYi9rb2Vuc2NobWVldHMKICAgICAgLSBsZWt0b3IgYnVpbGQgLU8gcHVibGljCiAgcHVibGlzaC1rb2Vuc2NobWVldHM6CiAgICBpbWFnZTogZG9ja2VyCiAgICBjb21tYW5kczoKICAgICAgLSBjYXQga29lbnNjaG1lZXRzX2NoYW5nZWQgfHwgZXhpdCAwCiAgICAgIC0gZG9ja2VyIHBzCiAgICAgIC0gZG9ja2VyIGxvZ2luIC11ICIkRE9DS0VSX1VTRVJOQU1FIiAtcCAiJERPQ0tFUl9QQVNTV09SRCIKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgdmVzcGFrb2VuL2tvZW5zY2htZWV0cyAtZiBrb2Vuc2NobWVldHMvRG9ja2VyZmlsZSBrb2Vuc2NobWVldHMKICAgICAgLSBkb2NrZXIgcHVzaCB2ZXNwYWtvZW4va29lbnNjaG1lZXRzCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfVVNFUk5BTUU9JCRET0NLRVJfVVNFUk5BTUUKICAgICAgLSBET0NLRVJfUEFTU1dPUkQ9JCRET0NLRVJfUEFTU1dPUkQKICAgICAgLSBET0NLRVJfRU1BSUw9JCRET0NLRVJfRU1BSUwKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICB1cGRhdGUtc2VydmVyOgogICAgaW1hZ2U6IGRkdXBvcnRhbC9kb2NrZXItY29tcG9zZQogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gc291cmNlIC4vZW52LnNoCiAgICAgIC0gZG9ja2VyLWNvbXBvc2UgcHVsbAogICAgICAtIGNhdCBrb2Vuc2NobWVldHNfY2hhbmdlZCAmJiBkb2NrZXItY29tcG9zZSByZXN0YXJ0IGtvZW5zY2htZWV0c3d3dwogICAgICAtIGNhdCBkd2FsZXJfY2hhbmdlZCAmJiBkb2NrZXItY29tcG9zZSByZXN0YXJ0IGR3YWxlcnd3dwogIHNhdmUtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gZHdhbGVyL25vZGVfbW9kdWxlcwogICAgcmVidWlsZDogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCBdCg.8aiAvmNiO_hswARlFpu0d4oZM0NCnxs2MuFQN1mdMgY