eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2hlY2stZGlmZnM6CiAgICBpbWFnZTogYnJhdmlzc2ltb2xhYnMvYWxwaW5lLWdpdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9vbnRoZXdlYgogICAgICAtIGdpdCBkaWZmIC0tbmFtZS1vbmx5IEB-Li5ACiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0gZHdhbGVyLyB8fCBlY2hvICJ0cnVlIiA-IGR3YWxlcl9jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0ga29lbnNjaG1lZXRzLyB8fCBlY2hvICJ0cnVlIiA-IGtvZW5zY2htZWV0c19jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgQH4uLkAgLS0gbGVrdG9yLyB8fCBlY2hvICJ0cnVlIiA-IGxla3Rvcl9jaGFuZ2VkCiAgbG9hZC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBkd2FsZXIvbm9kZV9tb2R1bGVzCiAgICByZXN0b3JlOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QsIHB1c2ggXQogIHRlc3QtZHdhbGVyOgogICAgaW1hZ2U6IG5vZGU6NgogICAgY29tbWFuZHM6CiAgICAgIC0gY2F0IGR3YWxlcl9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGNkIGR3YWxlcgogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICBwdWJsaXNoLWR3YWxlcjoKICAgIGltYWdlOiBkb2NrZXIKICAgIGNvbW1hbmRzOgogICAgICAjIC0gY2F0IGR3YWxlcl9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGRvY2tlciBwcwogICAgICAtIGRvY2tlciBsb2dpbiAtdSAiJERPQ0tFUl9VU0VSTkFNRSIgLXAgIiRET0NLRVJfUEFTU1dPUkQiCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHZlc3Bha29lbi9kd2FsZXIgLWYgZHdhbGVyL0RvY2tlcmZpbGUgZHdhbGVyCiAgICAgIC0gZG9ja2VyIHB1c2ggdmVzcGFrb2VuL2R3YWxlcgogICAgICAtIGRvY2tlciBwcyB8IGdyZXAgZHdhbGVyd3d3IHwgYXdrICd7IHByaW50ICQxIH0nCiAgICAgIC0gZG9ja2VyIHJlc3RhcnQgJChkb2NrZXIgcHMgfCBncmVwIGR3YWxlcnd3dyB8IGN1dCAtZCcgJyAtZjEpCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfVVNFUk5BTUU9JCRET0NLRVJfVVNFUk5BTUUKICAgICAgLSBET0NLRVJfUEFTU1dPUkQ9JCRET0NLRVJfUEFTU1dPUkQKICAgICAgLSBET0NLRVJfRU1BSUw9JCRET0NLRVJfRU1BSUwKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICBwdWJsaXNoLWxla3RvcjoKICAgIGltYWdlOiBkb2NrZXIKICAgIGNvbW1hbmRzOgogICAgICAtIGNhdCBsZWt0b3JfY2hhbmdlZCB8fCBleGl0IDAKICAgICAgLSBkb2NrZXIgcHMKICAgICAgLSBkb2NrZXIgbG9naW4gLXUgIiRET0NLRVJfVVNFUk5BTUUiIC1wICIkRE9DS0VSX1BBU1NXT1JEIgogICAgICAtIGRvY2tlciBidWlsZCAtdCB2ZXNwYWtvZW4vbGVrdG9yIC1mIGxla3Rvci9Eb2NrZXJmaWxlIGxla3RvcgogICAgICAtIGRvY2tlciBwdXNoIHZlc3Bha29lbi9sZWt0b3IKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9VU0VSTkFNRT0kJERPQ0tFUl9VU0VSTkFNRQogICAgICAtIERPQ0tFUl9QQVNTV09SRD0kJERPQ0tFUl9QQVNTV09SRAogICAgICAtIERPQ0tFUl9FTUFJTD0kJERPQ0tFUl9FTUFJTAogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogIGJ1aWxkLWtvZW5zY2htZWV0czoKICAgIGltYWdlOiB2ZXNwYWtvZW4vbGVrdG9yOmxhdGVzdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2F0IGtvZW5zY2htZWV0c19jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGNkIC9kcm9uZS9zcmMvZ2l0aHViLmNvbS92ZXNwYWtvZW4vb250aGV3ZWIva29lbnNjaG1lZXRzCiAgICAgIC0gbGVrdG9yIGJ1aWxkIC1PIHB1YmxpYwogIHB1Ymxpc2gta29lbnNjaG1lZXRzOgogICAgaW1hZ2U6IGRvY2tlcgogICAgY29tbWFuZHM6CiAgICAgIC0gY2F0IGtvZW5zY2htZWV0c19jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGRvY2tlciBwcwogICAgICAtIGRvY2tlciBsb2dpbiAtdSAiJERPQ0tFUl9VU0VSTkFNRSIgLXAgIiRET0NLRVJfUEFTU1dPUkQiCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHZlc3Bha29lbi9rb2Vuc2NobWVldHMgLWYga29lbnNjaG1lZXRzL0RvY2tlcmZpbGUga29lbnNjaG1lZXRzCiAgICAgIC0gZG9ja2VyIHB1c2ggdmVzcGFrb2VuL2tvZW5zY2htZWV0cwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX1VTRVJOQU1FPSQkRE9DS0VSX1VTRVJOQU1FCiAgICAgIC0gRE9DS0VSX1BBU1NXT1JEPSQkRE9DS0VSX1BBU1NXT1JECiAgICAgIC0gRE9DS0VSX0VNQUlMPSQkRE9DS0VSX0VNQUlMCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgc2F2ZS1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBkd2FsZXIvbm9kZV9tb2R1bGVzCiAgICByZWJ1aWxkOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0K.JcLejHljW1rVHo3MHqNItEO89OnpT929HN1P7OfE2bU