eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgbG9hZC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvZG9ja2VyCiAgICAgIC0gZHdhbGVyL25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICBidWlsZC1kd2FsZXI6CiAgICBpbWFnZTogbm9kZTo2CiAgICBjb21tYW5kczoKICAgICAgLSBjZCBkd2FsZXIKICAgICAgLSBucG0gaW5zdGFsbAogIGJ1aWxkLWtvZW5zY2htZWV0czoKICAgIGltYWdlOiBkZWJpYW46d2hlZXp5CiAgICBjb21tYW5kczoKICAgICAgLSBlY2hvICdkZWJjb25mIGRlYmNvbmYvZnJvbnRlbmQgc2VsZWN0IE5vbmludGVyYWN0aXZlJyB8IGRlYmNvbmYtc2V0LXNlbGVjdGlvbnMKICAgICAgLSBhcHQtZ2V0IHVwZGF0ZQogICAgICAtIGFwdC1nZXQgaW5zdGFsbCAteSBsaWJzc2wtZGV2IHB5dGhvbjIuNyBweXRob24yLjctZGV2IGN1cmwgZ2NjIGxpYmZmaS1kZXYgaW1hZ2VtYWdpY2sKICAgICAgLSBjZCAvdXNyL2xvY2FsL2JpbiAmJiBsbiAtcyAvdXNyL2Jpbi9weXRob24yLjcgcHl0aG9uCiAgICAgIC0gY3VybCAtc2YgaHR0cHM6Ly93d3cuZ2V0bGVrdG9yLmNvbS9pbnN0YWxsLnNoIHwgc2VkICcvc3RkaW4vZDtzL2lucHV0ID0gLiovcmV0dXJuLycgPiBpbnN0YWxsLnNoCiAgICAgIC0gY2htb2QgK3ggLi9pbnN0YWxsLnNoCiAgICAgIC0gLi9pbnN0YWxsLnNoCiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9vbnRoZXdlYi9rb2Vuc2NobWVldHMKICAgICAgLSBsZWt0b3IgYnVpbGQgLU8gcHVibGljCiAgcHVibGlzaC1rb2Vuc2NobWVldHM6CiAgICBpbWFnZTogdmVzcGFrb2VuL2Ryb25lLWRvY2tlcjowLjUuMQogICAgZGVidWc6IHRydWUKICAgIHJlcG86IHZlc3Bha29lbi9rb2Vuc2NobWVldHMKICAgIHRhZzogWyJsYXRlc3QiLCAiJHtEUk9ORV9CVUlMRF9OVU1CRVJ9Il0KICAgICMgc3RvcmFnZV9kcml2ZXI6IHZmcwogICAgY29udGV4dDoga29lbnNjaG1lZXRzCiAgICBkb2NrZXJmaWxlOiBrb2Vuc2NobWVldHMvRG9ja2VyZmlsZQogIHNhdmUtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gL2Ryb25lL2RvY2tlcgogICAgICAtIGR3YWxlci9ub2RlX21vZHVsZXMKICAgIHJlYnVpbGQ6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQo.r2xW1010MK5JplidUrooaJXbyG3A5D9Sjo16GvdP1vE